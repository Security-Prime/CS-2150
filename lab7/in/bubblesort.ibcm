C00E	000	jmp		start		skip variables
0005	001	size		dw		5		
3000	002	LD		dw		load dummy
4000	003	SD		dw		store dummy
0001	004	1		dw
0000	005	current	dw		0
0000	006	previous	dw		0
0000	007		
0000	008	i		dw		0		i=0
0003	009	j		dw		3		j=4=5-1		
0001	00A	
0000	00B	
0000	00C	
0000	00D	
3001	00E	load		size	loop size-1
6008	00F	sub		i	
D03F	010	jmpe		exit	size-i>0
E03F	011	jmpl		exit	size-i=0
3009	012	load		j	loop
6008	013	sub		i	
D038	014	jmpe		j-i>0		
E038	015	jmpl		j-i=0	
3002	016	load		LD ->	a[j]
5040	017	add		a[]
5009	018	add		j	
401A	019	store		the next empty spot
0000	01A			
4005	01B	store		a[j] in current
3002	01C	load		LD	
5040	01D	add		a[]
5009	01E	add		j		a[j]
6004	01F	sub		1		a[j-1]
4021	020	store		in the next empty spot
0000	021			
4006	022	store		previous	
3005	023	load		current	
6006	024	sub		previous	a[j]-a[j-1]
E027	025	jmpl		if >0 	swap
C034	026	jmp		ready for next j
3003	027	load		SD	swap
5040	028	add		a[]
5009	029	add		j		
402C	02A	store		in the next empty spot
3006	02B	load		previous	
0000	02C	
3003	02D	load		SD	a[j-1]= current
5040	02E	add		a[]      
5009	02F	add		j		
6004	030	sub		one	
4033	031	store		in the next empty spot
3005	032	load 		current
0000	033	
3009	034	load		j		
6004	035	sub		one	j-1	
4009	036	store		j		
C012	037	jmp		loop	jump back to line 12
3008	038	load		i		
5004	039	add		i+1		
4008	03A	store		i		
3001	03B	load		size		j
6004	03C	sub		1		size-1=j
4009	03D	store		j
C00E	03E	jmp		loop	back to start with new i
0000	03F	HULK		HULK
0041	040	a[]		dw		int a[] 
000F	041	a0		dw		a0=F
0002	042	a1		dw		a1=2
0003	043	a2		dw		a2=3
000E	044	a3		dw		a3=E
0009	045	a4		dw		a4=9